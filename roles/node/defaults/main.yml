---

# Chain definitions

chain: gaia-devnet

chain_settings:
  gaia-devnet:
    repo: https://github.com/cosmos/gaia.git
    binary_url: "https://github.com/cosmos/gaia/releases/download/##VERSION##/gaiad-##VERSION##-{{binary_arch_map[ansible_architecture]}}"
    binary: gaiad
    version: v7.0.0
    chain_id: "theta-devnet"
    denom: "uatom"

  juno-testnet:
    repo: https://github.com/CosmosContracts/juno.git
    binary: junod
    binary_url: "https://github.com/CosmosContracts/juno/releases/download/v##VERSION##/junod"
    version: v6.0.0
    chain_id: "uni-3"
    denom: "ujono"
    genesis_url: "https://raw.githubusercontent.com/CosmosContracts/testnets/main/uni-3/genesis.json"
    p2p_persistent_peers: "ec41af656b3450050ae27559b66b877373c44861@65.21.122.47:26656,2ae09360327854c79971d07245764626f43fdfc5@38.242.247.46:36656,d3bb05d61ebe83958a5ea2af2abf5d8fce620038@116.202.143.90:26656,c583f7bbfee00ca0ff0208663fe2d07014415ec9@185.213.27.145:36656"

  juno:
    repo: https://github.com/CosmosContracts/juno.git
    binary: junod
    binary_url: "https://github.com/CosmosContracts/juno/releases/download/v##VERSION##/junod"
    version: v9.0.0
    chain_id: "juno-1"
    denom: "ujono"
    genesis_url: "https://share.blockpane.com/juno/phoenix/genesis.json"
    p2p_persistent_peers: "ade4d8bc8cbe014af6ebdf3cb7b1e9ad36f412c0@seeds.polkachu.com:26656"
    #p2p_presistent_peers: "b1f46f1a1955fc773d3b73180179b0e0a07adce1@162.55.244.250:39656,7f593757c0cde8972ce929381d8ac8e446837811@178.18.255.244:26656,7b22dfc605989d66b89d2dfe118d799ea5abc2f0@167.99.210.65:26656,4bd9cac019775047d27f9b9cea66b25270ab497d@137.184.7.164:26656,bd822a8057902fbc80fd9135e335f0dfefa32342@65.21.202.159:38656,15827c6c13f919e4d9c11bcca23dff4e3e79b1b8@51.38.52.210:38656,e665df28999b2b7b40cff2fe4030682c380bf294@188.40.106.109:38656,92804ce50c85ff4c7cf149d347dd880fc3735bf4@34.94.231.154:26656,795ed214b8354e8468f46d1bbbf6e128a88fe3bd@34.127.19.222:26656,ea9c1ac0e91639b2c7957d9604655e2263abe4e1@185.181.103.136:26656"
    gaiad_binary_repo: "https://github.com/CosmosContracts/juno/releases/download/v8.0.0/junod"

  regen:
    repo: https://github.com/regen-network/regen-ledger.git
    binary: regen
    version: v3.0.0
    chain_id: "testnet"

# Chain settings

chain_binary_name: "{{chain_settings[chain]['binary']}}"
node_user: node
node_user_home: "/home/{{node_user}}"
chain_home: "{{node_user_home}}/.{{chain_binary_name}}"
chain_version:  "{{chain_settings[chain]['version']}}"
chain_repository: "{{chain_settings[chain]['repo']}}"
chain_binary_release: "{{chain_settings[chain]['binary_url'] | replace('##VERSION##',{{chain_version}}) }} "
node_service_name: "{{chain_settings[chain]['binary']}}"
chain_denom: "{{chain_settings[chain]['denom']}}"
chain_id: "{{chain_settings[chain]['chain_id']}}"

# General settings

chain_binary_source: "build"
chain_home_clear: false
node_unsafe_reset: false

chain_bin: "{{ node_user_home }}/go/bin/{{chain_binary_name}}"

chain_gov_testing: false
chain_voting_period: 10s

chain_repo_dir: "{{ node_user_home }}/chain-repo"

# Default variables for creating a validator
chain_create_validator: false
chain_gentx_validator: "8000000000{{ chain_denom }}"
node_keyring: "test"
chain_validator_coins: "1000000000000{{ chain_denom }}"

# Default variables for airdropping tokens
chain_airdrop: false
chain_airdrop_coins: "1000000000{{ chain_denom }}"
chain_airdrop_accounts: []

# Cosmovisor settings
## TODO: Support arbitrary cosmovisor branches
use_cosmovisor: true
cosmovisor_version: v1.0.0
cosmovisor_repository: github.com/cosmos/cosmos-sdk/cosmovisor/cmd/cosmovisor
cosmovisor_bin: "{{node_user_home}}/go/bin/cosmovisor"
cosmovisor_home: "{{ chain_home }}/cosmovisor"
cosmovisor_service_name: "cosmovisor"
cosmovisor_skip_backup: true

# Go configuration
go_arch: "{{binary_arch_map[ansible_architecture]}}"
go_version: "1.18.5"

## config.toml variables
fast_sync: true
abci: socket

### RPC
rpc_port: '26657'

### P2P
p2p_port: '26656'
p2p_external_address: ''
p2p_seeds: ''
p2p_persistent_peers: ''
p2p_upnp: false
p2p_pex: true
p2p_seed_mode: false
p2p_private_peer_ids: false

### Statesync
statesync_enabled: false
statesync_rpc_servers: ''
statesync_trust_height: 0
statesync_trust_hash: ''
statesync_trust_period: 168h0m0s
statesync_discovery_time: 15s
statesync_chunk_request_timeout: 10s
statesync_auto_populate: true
# TODO: Why does my config say 4 when it isn't default?
statesync_chunk_fetchers: '4'

### Fastsync
fastsync_version: v0
# TODO: All the other fastsync versions?

prometheus_enabled: false
prometheus_listen_addr: :26660
instrumentation_namespace: tendermint

## app.toml variables
minimum_gas_prices: ''
pruning: default
pruning_keep_recent: '0'
pruning_keep_every: '0'
pruning_interval: '0'
halt_height: '0'
halt_time: '0'
min_retain_blocks: '0'
inter_block_cache: true

### telemetry
telemetry_service_name: ''
telemetry_enabled: false
telemetry_enable_hostname: false
telemetry_enable_hostname_label: false
telemetry_enable_service_label: false
prometheus_retention_time: '0'

### API
api_enabled: false
api_swagger: false
api_port: '1317'

### grpc
grpc_enabled: true
grpc_port: '9090'

### state-sync
statesync_snapshot_interval: 0
statesync_snapshot_keep_recent: 2

### client.toml variables
client_keyring_backend: os
client_broadcast_mode: sync

### Faucet settings
faucet_enabled: false
faucet_version: v0.2.1
faucet_service_name: token-faucet

### node exporter config
node_exporter_port: 9100

### Prometheus / Grafana defaults
grafana_ssh_url: root@monitor.polypore.xyz
monitoring_prometheus: false

### PANIC monitoring defaults
panic_ssh_url: root@monitor.polypore.xyz
monitoring_panic: false
panic_config_file: /home/panic/panic_cosmos/config/user_config_nodes.ini
panic_is_validator: 'no'
panic_include_in_node_monitor: 'yes'
panic_include_in_network_monitor: 'yes'

### Reboot after setup
reboot: true

# Vars with no defaults (to prevent code from running)
# These don't get put into config files
# genesis_url: ""
# genesis_file: ""
# addrbook_file: ""
# addrbook_url: "https://quicksync.io/addrbook.cosmos.json"
# node_key_file: ""
# priv_validator_key_file

# Architecture mapping
binary_arch_map:
  aarch64: "linux-arm64"
  x86_64: "linux-amd64"
