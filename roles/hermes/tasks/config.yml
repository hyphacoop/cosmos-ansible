---
- name: Get chain IDs
  set_fact:
    chain_ids: "{{ hermes_chains.keys() | list }}"

- name: Configure Hermes
  template:
    src: config.toml.j2
    dest: /home/{{ hermes_user }}/.hermes/config.toml
  become_user: "{{ hermes_user }}"

- name: Upload key file from first chain
  copy:
    src: '{{ hermes_chains[chain_ids[0]].hermes_relayer_key }}'
    dest: '/home/{{ hermes_user }}/.hermes/{{ chain_ids[0] }}-relayer.json'
    owner: '{{hermes_user}}'
    group: '{{hermes_group}}'
  when: hermes_relayer_keys

- name: Upload key file from second chain
  copy:
    src: '{{ hermes_chains[chain_ids[1]].hermes_relayer_key }}'
    dest: '/home/{{ hermes_user }}/.hermes/{{ chain_ids[1] }}-relayer.json'
    owner: '{{hermes_user}}'
    group: '{{hermes_group}}'
  when: hermes_relayer_keys

- name: Add relayer keys
  shell: |
    hermes keys add --key-file /home/{{ hermes_user }}/.hermes/{{ chain_ids[0] }}-relayer.json --chain {{ chain_ids[0] }} --overwrite
    hermes keys add --key-file /home/{{ hermes_user }}/.hermes/{{ chain_ids[1] }}-relayer.json --chain {{ chain_ids[1] }} --overwrite
  environment:
    PATH: "/home/{{hermes_user}}/bin:{{ ansible_env.PATH }}"
  become_user: hermes
  when: hermes_relayer_keys

- name: Upload mnemonic from first chain
  copy:
    src: '{{ hermes_chains[chain_ids[0]].hermes_relayer_mnemonic }}'
    dest: '/home/{{ hermes_user }}/.hermes/{{ chain_ids[0] }}-relayer.txt'
    owner: '{{hermes_user}}'
    group: '{{hermes_group}}'
  when: hermes_relayer_mnemonics

- name: Upload mnemonic file from second chain
  copy:
    src: '{{ hermes_chains[chain_ids[1]].hermes_relayer_mnemonic }}'
    dest: '/home/{{ hermes_user }}/.hermes/{{ chain_ids[1] }}-relayer.txt'
    owner: '{{hermes_user}}'
    group: '{{hermes_group}}'
  when: hermes_relayer_mnemonics

- name: Add relayer keys from mnemonics
  shell: |
    hermes keys add --mnemonic-file /home/{{ hermes_user }}/.hermes/{{ chain_ids[0] }}-relayer.txt --chain {{ chain_ids[0] }} --overwrite
    hermes keys add --mnemonic-file /home/{{ hermes_user }}/.hermes/{{ chain_ids[1] }}-relayer.txt --chain {{ chain_ids[1] }} --overwrite
  environment:
    PATH: "/home/{{hermes_user}}/bin:{{ ansible_env.PATH }}"
  become_user: hermes
  when: hermes_relayer_mnemonics

- name: Create connection over new clients
  when: not hermes_set_clients
  shell: |
    hermes create connection --a-chain {{ chain_ids[0] }} --b-chain {{ chain_ids[1] }}
  environment:
    PATH: "/home/{{hermes_user}}/bin:{{ ansible_env.PATH }}"
  become_user: hermes

- name: Create connection over existing clients
  when: hermes_set_clients
  shell: |
    hermes create connection --a-chain {{ chain_ids[0] }} --a-client {{ hermes_chains[chain_ids[0]].hermes_client_id }} --b-client {{ hermes_chains[chain_ids[1]].hermes_client_id }}
  environment:
    PATH: "/home/{{hermes_user}}/bin:{{ ansible_env.PATH }}"
  become_user: hermes

- name: Obtain last connection
  shell: |
    hermes --json query connections --chain {{ chain_ids[0] }} | tail -n 1 | jq -r '.result[-1]'
  environment:
    PATH: "/home/{{hermes_user}}/bin:{{ ansible_env.PATH }}"
  register: connection_id
  become_user: hermes

- name: Display last connection
  debug:
    msg:
      - "Last connection: {{ connection_id.stdout }}"

- name: Create channel using last connection
  when: not hermes_set_channel_version
  shell: |
    hermes create channel --a-chain {{ chain_ids[0] }} \
    --a-port {{ hermes_chains[chain_ids[0]].hermes_port_name}} \
    --b-port {{ hermes_chains[chain_ids[1]].hermes_port_name}} \
    --order {{ hermes_order }} --a-connection {{ connection_id.stdout }}
  environment:
    PATH: "/home/{{hermes_user}}/bin:{{ ansible_env.PATH }}"
  register: channel_creation
  become_user: hermes

- name: Display channel creation output
  when: not hermes_set_channel_version
  debug:
    msg: "{{ channel_creation.stdout }}"

- name: Create channel using last connection, set channel version
  when: hermes_set_channel_version
  shell: |
    hermes create channel --a-chain {{ chain_ids[0] }} \
    --a-port {{ hermes_chains[chain_ids[0]].hermes_port_name}} \
    --b-port {{ hermes_chains[chain_ids[1]].hermes_port_name}} \
    --order {{ hermes_order }} --a-connection {{ connection_id.stdout }} \
    --channel-version {{ hermes_channel_version }}
  environment:
    PATH: "/home/{{hermes_user}}/bin:{{ ansible_env.PATH }}"
  register: channel_creation_with_version
  become_user: hermes

- name: Display channel creation output, set channel version
  when: hermes_set_channel_version
  debug:
    msg: "{{ channel_creation_with_version.stdout }}"

- name: Save channel ids for last connection
  shell: |
    hermes --json query connection channels --chain {{ chain_ids[0] }} --connection {{ connection_id.stdout }} | jq -r '.result' > /home/{{ hermes_user }}/{{ chain_ids[0] }}-{{ connection_id.stdout }}.txt
    hermes --json query connection channels --chain {{ chain_ids[1] }} --connection {{ connection_id.stdout }} | jq -r '.result' > /home/{{ hermes_user }}/{{ chain_ids[1] }}-{{ connection_id.stdout }}.txt
  environment:
    PATH: "/home/{{hermes_user}}/bin:{{ ansible_env.PATH }}"
  become_user: hermes
