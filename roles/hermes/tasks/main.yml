---
- include_role:
    name: common

- name: Create hermes user
  user:
    name: "{{ hermes_user }}"
    group: "{{ hermes_group }}"
    shell: /bin/bash
    append: no

- name: chown hermes home directory
  file:
    path: /home/{{ hermes_user }}
    state: directory
    owner: "{{ hermes_user }}"
    group: "{{ hermes_group }}"
    mode: '0755'


- name: Create ~/.hermes/bin directory
  file:
    path: /home/{{ hermes_user }}/.hermes/bin
    state: directory
    owner: "{{ hermes_user }}"
    group: "{{ hermes_group }}"
    mode: '0755'

- name: Create ~/bin directory
  file:
    path: /home/{{ hermes_user }}/bin
    state: directory
    owner: "{{ hermes_user }}"
    group: "{{ hermes_group }}"
    mode: '0755'

# - name: Get latest hermes version
#   uri:
#     url: https://api.github.com/repos/informalsystems/ibc-rs/releases/latest
#     return_content: true
#   register: json_response

- name: Download and Extract hermes
  unarchive:
    src: https://github.com/informalsystems/ibc-rs/releases/download/{{ release_version }}/hermes-{{ release_version }}-x86_64-unknown-linux-gnu.tar.gz
    dest: /home/{{ hermes_user }}/.hermes/bin/
    remote_src: yes
  become_user: "{{ hermes_user }}"

- name: ln -s /home/{{ hermes_user }}/.hermes/bin/hermes /home/{{ hermes_user }}/bin/hermes
  ansible.builtin.file:
    src: /home/{{ hermes_user }}/.hermes/bin/hermes
    dest: /home/{{ hermes_user }}/bin/hermes
    owner: "{{ hermes_user }}"
    group: "{{ hermes_group }}"
    state: link

- name: Configure Hermes
  template:
    src: config.toml.j2
    dest: /home/{{ hermes_user }}/.hermes/config.toml

- name: Get chain IDs
  set_fact:
    chain_ids: "{{ hermes_chains.keys() | list }}"

- name: Collect key file from first chain
  synchronize:
    mode: push
    src: "{{ hermes_chains[chain_ids[0]].chain_home}}/validator.json"
    dest: "/home/{{hermes_user}}/.hermes/{{ chain_ids[0] }}-validator.json"
    rsync_opts:
      - "--chown=hermes:users"
  delegate_to: "{{hermes_chains[chain_ids[0]].hermes_chain_hostname}}"

- name: Collect key file from second chain
  synchronize:
    mode: push
    src: "{{ hermes_chains[chain_ids[1]].chain_home}}/validator.json"
    dest: "/home/{{hermes_user}}/.hermes/{{chain_ids[1]}}-validator.json"
    rsync_opts:
      - "--chown=hermes:users"
  delegate_to: "{{hermes_chains[chain_ids[1]].hermes_chain_hostname}}"

- name: Add relayer keys
  shell: |
    hermes keys add --key-file /home/{{ hermes_user }}/.hermes/{{ chain_ids[0] }}-validator.json --chain {{ chain_ids[0] }} --overwrite
    hermes keys add --key-file /home/{{ hermes_user }}/.hermes/{{ chain_ids[1] }}-validator.json --chain {{ chain_ids[1] }} --overwrite
  environment:
    PATH: "/home/{{hermes_user}}/bin:{{ ansible_env.PATH }}"
  become_user: hermes

- name: Create connection
  shell: |
    hermes create connection --a-chain {{ chain_ids[0] }} --a-client 07-tendermint-0 --b-client 07-tendermint-0
  environment:
    PATH: "/home/{{hermes_user}}/bin:{{ ansible_env.PATH }}"
  become_user: hermes

- name: Create channel
  shell: |
    hermes create channel --a-chain {{ chain_ids[0] }} --a-port consumer --b-port provider --order ordered --channel-version 1 --a-connection connection-0
  environment:
    PATH: "/home/{{hermes_user}}/bin:{{ ansible_env.PATH }}"
  become_user: hermes
  
- name: Installing Hermes systemd service
  template:
    src: hermes.service.j2
    dest: /etc/systemd/system/hermes.service

- name: Start Hermes systemd service
  systemd:
    daemon_reload: true
    state: restarted
    enabled: true
    name: "hermes"

- name: Rebooting the machine
  include_role:
    name: reboot
  when: reboot | default(false) | bool
