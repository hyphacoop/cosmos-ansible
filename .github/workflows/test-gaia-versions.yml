---

name: Test Gaia Versions
on:
  schedule:
    # At 15:30 on Monday.
    - cron: '30 15 * * 1'
  pull_request:
    types:
      - opened
      - closed
  push:
    paths-ignore:
      - 'docs/**'
      - 'examples/**'
      - '!examples/inventory-local.yml'
      - 'README.md'
jobs:
  generate-matrices:
    runs-on: ubuntu-latest
    steps:
      # Get system info
      - run: ifconfig
      - run: arp -a
      - run: sudo dmidecode
      - run: df -h
      - run: free -m
      - run: uname -a
      - run: lsb_release -a
      - run: echo "GitHub branch is ${{ github.ref }}"
      - run: whoami
      - run: pwd

      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install requests

      - name: Generate starting versions
        id: generate-start
        run: |
          start=$(tests/generate_version_matrix.py v6.0.4)
          echo $start
          echo ::set-output name=start_versions::$start
      - name: Generate upgrade versions
        id: generate-upgrade
        run: |
          upgrade=$(tests/generate_upgrade_matrix.py v6.0.4)
          echo $upgrade
          echo ::set-output name=upgrade_versions::$upgrade
    outputs:
      start_versions: ${{ steps.generate-start.outputs.start_versions }}
      upgrade_versions: ${{ steps.generate-upgrade.outputs.upgrade_versions }}

  test-start:
    runs-on: ubuntu-latest
    needs: generate-matrices
    strategy:
      matrix:
        ${{ fromJSON(needs.generate-matrices.outputs.start_versions) }}
    steps:
      - run: echo "Test ${{matrix.gaia_version}}"
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install ansible toml

      - name: Configure ansible.cfg
        run: echo "transport = local" >> ansible.cfg
      - name: Configure inventory
        run: "sed 's/root@testnet.com:/local:/g' examples/inventory-local.yml > inventory.yml"
      - name: Run playbook
        run: ansible-playbook gaia.yml -i inventory.yml --extra-vars "reboot=false gaiad_version=${{ matrix.gaia_version }} gaiad_home={{ gaiad_user_home }}/.gaia gaiad_gov_testing=true gaiad_user=runner"
      - name: Check cosmovisor service
        run: systemctl status cosmovisor
      - name: Check blocks are being produced
        run: tests/test_block_production.sh 127.0.0.1 26657 10
      - name: Happy path - transaction testing
        run: tests/test_tx_fresh.sh
      - name: Get RAM usage while gaiad is running
        run: free -m

  test-upgrade:
    runs-on: ubuntu-latest
    needs: generate-matrices
    strategy:
      matrix:
        ${{ fromJSON(needs.generate-matrices.outputs.upgrade_versions) }}
    steps:
      - run: echo "Test upgrading ${{matrix.gaia_version}} to ${{matrix.upgrade_version}}"
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install ansible toml

      - name: Configure ansible.cfg
        run: echo "transport = local" >> ansible.cfg
      - name: Configure inventory
        run: "sed 's/root@testnet.com:/local:/g' examples/inventory-local.yml > inventory.yml"
      - name: Run playbook
        run: ansible-playbook gaia.yml -i inventory.yml --extra-vars "reboot=false gaiad_version=${{ matrix.gaia_version }} gaiad_home={{ gaiad_user_home }}/.gaia gaiad_gov_testing=true gaiad_user=runner"
      - name: Check cosmovisor service
        run: systemctl status cosmovisor
      - name: Check blocks are being produced
        run: tests/test_block_production.sh 127.0.0.1 26657 10
      - name: Test software upgrade
        run: tests/test_software_upgrade.sh 127.0.0.1 26657 ${{ matrix.upgrade_version }}
      - name: Happy path - transaction testing
        run: tests/test_tx_fresh.sh
